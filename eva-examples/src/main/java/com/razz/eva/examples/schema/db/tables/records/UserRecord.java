/*
 * This file is generated by jOOQ.
 */
package com.razz.eva.examples.schema.db.tables.records;


import com.razz.eva.examples.schema.db.tables.User;
import com.razz.jooq.record.BaseEntityRecord;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;

import javax.annotation.processing.Generated;
import java.time.Instant;
import java.util.UUID;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.16.6",
        "schema version:002"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserRecord extends UpdatableRecordImpl<UserRecord> implements BaseEntityRecord<UUID>, Record7<UUID, String, String, String, Instant, Instant, Long> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>user.id</code>.
     */
    public UserRecord setId(UUID value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>user.id</code>.
     */
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>user.first_name</code>.
     */
    public UserRecord setFirstName(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>user.first_name</code>.
     */
    public String getFirstName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>user.last_name</code>.
     */
    public UserRecord setLastName(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>user.last_name</code>.
     */
    public String getLastName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>user.address</code>.
     */
    public UserRecord setAddress(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>user.address</code>.
     */
    public String getAddress() {
        return (String) get(3);
    }

    /**
     * Setter for <code>user.record_updated_at</code>.
     */
    public UserRecord setRecordUpdatedAt(Instant value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>user.record_updated_at</code>.
     */
    public Instant getRecordUpdatedAt() {
        return (Instant) get(4);
    }

    /**
     * Setter for <code>user.record_created_at</code>.
     */
    public UserRecord setRecordCreatedAt(Instant value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>user.record_created_at</code>.
     */
    public Instant getRecordCreatedAt() {
        return (Instant) get(5);
    }

    /**
     * Setter for <code>user.version</code>.
     */
    public UserRecord setVersion(Long value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>user.version</code>.
     */
    public Long getVersion() {
        return (Long) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<UUID, String, String, String, Instant, Instant, Long> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<UUID, String, String, String, Instant, Instant, Long> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<UUID> field1() {
        return User.USER.ID;
    }

    @Override
    public Field<String> field2() {
        return User.USER.FIRST_NAME;
    }

    @Override
    public Field<String> field3() {
        return User.USER.LAST_NAME;
    }

    @Override
    public Field<String> field4() {
        return User.USER.ADDRESS;
    }

    @Override
    public Field<Instant> field5() {
        return User.USER.RECORD_UPDATED_AT;
    }

    @Override
    public Field<Instant> field6() {
        return User.USER.RECORD_CREATED_AT;
    }

    @Override
    public Field<Long> field7() {
        return User.USER.VERSION;
    }

    @Override
    public UUID component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getFirstName();
    }

    @Override
    public String component3() {
        return getLastName();
    }

    @Override
    public String component4() {
        return getAddress();
    }

    @Override
    public Instant component5() {
        return getRecordUpdatedAt();
    }

    @Override
    public Instant component6() {
        return getRecordCreatedAt();
    }

    @Override
    public Long component7() {
        return getVersion();
    }

    @Override
    public UUID value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getFirstName();
    }

    @Override
    public String value3() {
        return getLastName();
    }

    @Override
    public String value4() {
        return getAddress();
    }

    @Override
    public Instant value5() {
        return getRecordUpdatedAt();
    }

    @Override
    public Instant value6() {
        return getRecordCreatedAt();
    }

    @Override
    public Long value7() {
        return getVersion();
    }

    @Override
    public UserRecord value1(UUID value) {
        setId(value);
        return this;
    }

    @Override
    public UserRecord value2(String value) {
        setFirstName(value);
        return this;
    }

    @Override
    public UserRecord value3(String value) {
        setLastName(value);
        return this;
    }

    @Override
    public UserRecord value4(String value) {
        setAddress(value);
        return this;
    }

    @Override
    public UserRecord value5(Instant value) {
        setRecordUpdatedAt(value);
        return this;
    }

    @Override
    public UserRecord value6(Instant value) {
        setRecordCreatedAt(value);
        return this;
    }

    @Override
    public UserRecord value7(Long value) {
        setVersion(value);
        return this;
    }

    @Override
    public UserRecord values(UUID value1, String value2, String value3, String value4, Instant value5, Instant value6, Long value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UserRecord
     */
    public UserRecord() {
        super(User.USER);
    }

    /**
     * Create a detached, initialised UserRecord
     */
    public UserRecord(UUID id, String firstName, String lastName, String address, Instant recordUpdatedAt, Instant recordCreatedAt, Long version) {
        super(User.USER);

        setId(id);
        setFirstName(firstName);
        setLastName(lastName);
        setAddress(address);
        setRecordUpdatedAt(recordUpdatedAt);
        setRecordCreatedAt(recordCreatedAt);
        setVersion(version);
    }
}
