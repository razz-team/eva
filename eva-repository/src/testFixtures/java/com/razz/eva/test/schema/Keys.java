/*
 * This file is generated by jOOQ.
 */
package com.razz.eva.test.schema;


import com.razz.eva.test.schema.tables.Bubalehs;
import com.razz.eva.test.schema.tables.Departments;
import com.razz.eva.test.schema.tables.Employees;
import com.razz.eva.test.schema.tables.Shakshoukas;
import com.razz.eva.test.schema.tables.records.BubalehsRecord;
import com.razz.eva.test.schema.tables.records.DepartmentsRecord;
import com.razz.eva.test.schema.tables.records.EmployeesRecord;
import com.razz.eva.test.schema.tables.records.ShakshoukasRecord;
import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;

import javax.annotation.processing.Generated;


/**
 * A class modelling foreign key relationships and constraints of tables in the
 * default schema.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.16.5",
        "schema version:004"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<BubalehsRecord> BUBALEHS_PKEY = Internal.createUniqueKey(Bubalehs.BUBALEHS, DSL.name("bubalehs_pkey"), new TableField[] { Bubalehs.BUBALEHS.ID }, true);
    public static final UniqueKey<DepartmentsRecord> DEPARTMENTS_BOSS_KEY = Internal.createUniqueKey(Departments.DEPARTMENTS, DSL.name("departments_boss_key"), new TableField[] { Departments.DEPARTMENTS.BOSS }, true);
    public static final UniqueKey<DepartmentsRecord> DEPARTMENTS_NAME_KEY = Internal.createUniqueKey(Departments.DEPARTMENTS, DSL.name("departments_name_key"), new TableField[] { Departments.DEPARTMENTS.NAME }, true);
    public static final UniqueKey<DepartmentsRecord> DEPARTMENTS_PKEY = Internal.createUniqueKey(Departments.DEPARTMENTS, DSL.name("departments_pkey"), new TableField[] { Departments.DEPARTMENTS.ID }, true);
    public static final UniqueKey<EmployeesRecord> EMPLOYEES_PKEY = Internal.createUniqueKey(Employees.EMPLOYEES, DSL.name("employees_pkey"), new TableField[] { Employees.EMPLOYEES.ID }, true);
    public static final UniqueKey<ShakshoukasRecord> SHAKSHOUKAS_PKEY = Internal.createUniqueKey(Shakshoukas.SHAKSHOUKAS, DSL.name("shakshoukas_pkey"), new TableField[] { Shakshoukas.SHAKSHOUKAS.ID }, true);

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<EmployeesRecord, DepartmentsRecord> EMPLOYEES__EMPLOYEES_DEPARTMENT_ID_FKEY = Internal.createForeignKey(Employees.EMPLOYEES, DSL.name("employees_department_id_fkey"), new TableField[] { Employees.EMPLOYEES.DEPARTMENT_ID }, Keys.DEPARTMENTS_PKEY, new TableField[] { Departments.DEPARTMENTS.ID }, true);
}
