/*
 * This file is generated by jOOQ.
 */
package com.razz.eva.events.db.tables.records;


import com.razz.eva.events.db.tables.ModelEvents;
import org.jooq.Field;
import org.jooq.Record10;
import org.jooq.Row10;
import org.jooq.impl.TableRecordImpl;

import javax.annotation.processing.Generated;
import java.time.Instant;
import java.util.UUID;


/**
 * PARTITIONED
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.17.4",
        "schema version:001"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ModelEventsRecord extends TableRecordImpl<ModelEventsRecord> implements Record10<UUID, UUID, String, String, String, Instant, Instant, String, String, Long> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>events.model_events.id</code>.
     */
    public ModelEventsRecord setId(UUID value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>events.model_events.id</code>.
     */
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>events.model_events.uow_id</code>.
     */
    public ModelEventsRecord setUowId(UUID value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>events.model_events.uow_id</code>.
     */
    public UUID getUowId() {
        return (UUID) get(1);
    }

    /**
     * Setter for <code>events.model_events.model_id</code>.
     */
    public ModelEventsRecord setModelId(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>events.model_events.model_id</code>.
     */
    public String getModelId() {
        return (String) get(2);
    }

    /**
     * Setter for <code>events.model_events.name</code>.
     */
    public ModelEventsRecord setName(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>events.model_events.name</code>.
     */
    public String getName() {
        return (String) get(3);
    }

    /**
     * Setter for <code>events.model_events.model_name</code>.
     */
    public ModelEventsRecord setModelName(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>events.model_events.model_name</code>.
     */
    public String getModelName() {
        return (String) get(4);
    }

    /**
     * Setter for <code>events.model_events.occurred_at</code>.
     */
    public ModelEventsRecord setOccurredAt(Instant value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>events.model_events.occurred_at</code>.
     */
    public Instant getOccurredAt() {
        return (Instant) get(5);
    }

    /**
     * Setter for <code>events.model_events.inserted_at</code>.
     */
    public ModelEventsRecord setInsertedAt(Instant value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>events.model_events.inserted_at</code>.
     */
    public Instant getInsertedAt() {
        return (Instant) get(6);
    }

    /**
     * Setter for <code>events.model_events.payload</code>.
     */
    public ModelEventsRecord setPayload(String value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>events.model_events.payload</code>.
     */
    public String getPayload() {
        return (String) get(7);
    }

    /**
     * Setter for <code>events.model_events.tracing_context</code>.
     */
    public ModelEventsRecord setTracingContext(String value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>events.model_events.tracing_context</code>.
     */
    public String getTracingContext() {
        return (String) get(8);
    }

    /**
     * Setter for <code>events.model_events.incremental_query_id</code>.
     */
    public ModelEventsRecord setIncrementalQueryId(Long value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>events.model_events.incremental_query_id</code>.
     */
    public Long getIncrementalQueryId() {
        return (Long) get(9);
    }

    // -------------------------------------------------------------------------
    // Record10 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row10<UUID, UUID, String, String, String, Instant, Instant, String, String, Long> fieldsRow() {
        return (Row10) super.fieldsRow();
    }

    @Override
    public Row10<UUID, UUID, String, String, String, Instant, Instant, String, String, Long> valuesRow() {
        return (Row10) super.valuesRow();
    }

    @Override
    public Field<UUID> field1() {
        return ModelEvents.MODEL_EVENTS.ID;
    }

    @Override
    public Field<UUID> field2() {
        return ModelEvents.MODEL_EVENTS.UOW_ID;
    }

    @Override
    public Field<String> field3() {
        return ModelEvents.MODEL_EVENTS.MODEL_ID;
    }

    @Override
    public Field<String> field4() {
        return ModelEvents.MODEL_EVENTS.NAME;
    }

    @Override
    public Field<String> field5() {
        return ModelEvents.MODEL_EVENTS.MODEL_NAME;
    }

    @Override
    public Field<Instant> field6() {
        return ModelEvents.MODEL_EVENTS.OCCURRED_AT;
    }

    @Override
    public Field<Instant> field7() {
        return ModelEvents.MODEL_EVENTS.INSERTED_AT;
    }

    @Override
    public Field<String> field8() {
        return ModelEvents.MODEL_EVENTS.PAYLOAD;
    }

    @Override
    public Field<String> field9() {
        return ModelEvents.MODEL_EVENTS.TRACING_CONTEXT;
    }

    @Override
    public Field<Long> field10() {
        return ModelEvents.MODEL_EVENTS.INCREMENTAL_QUERY_ID;
    }

    @Override
    public UUID component1() {
        return getId();
    }

    @Override
    public UUID component2() {
        return getUowId();
    }

    @Override
    public String component3() {
        return getModelId();
    }

    @Override
    public String component4() {
        return getName();
    }

    @Override
    public String component5() {
        return getModelName();
    }

    @Override
    public Instant component6() {
        return getOccurredAt();
    }

    @Override
    public Instant component7() {
        return getInsertedAt();
    }

    @Override
    public String component8() {
        return getPayload();
    }

    @Override
    public String component9() {
        return getTracingContext();
    }

    @Override
    public Long component10() {
        return getIncrementalQueryId();
    }

    @Override
    public UUID value1() {
        return getId();
    }

    @Override
    public UUID value2() {
        return getUowId();
    }

    @Override
    public String value3() {
        return getModelId();
    }

    @Override
    public String value4() {
        return getName();
    }

    @Override
    public String value5() {
        return getModelName();
    }

    @Override
    public Instant value6() {
        return getOccurredAt();
    }

    @Override
    public Instant value7() {
        return getInsertedAt();
    }

    @Override
    public String value8() {
        return getPayload();
    }

    @Override
    public String value9() {
        return getTracingContext();
    }

    @Override
    public Long value10() {
        return getIncrementalQueryId();
    }

    @Override
    public ModelEventsRecord value1(UUID value) {
        setId(value);
        return this;
    }

    @Override
    public ModelEventsRecord value2(UUID value) {
        setUowId(value);
        return this;
    }

    @Override
    public ModelEventsRecord value3(String value) {
        setModelId(value);
        return this;
    }

    @Override
    public ModelEventsRecord value4(String value) {
        setName(value);
        return this;
    }

    @Override
    public ModelEventsRecord value5(String value) {
        setModelName(value);
        return this;
    }

    @Override
    public ModelEventsRecord value6(Instant value) {
        setOccurredAt(value);
        return this;
    }

    @Override
    public ModelEventsRecord value7(Instant value) {
        setInsertedAt(value);
        return this;
    }

    @Override
    public ModelEventsRecord value8(String value) {
        setPayload(value);
        return this;
    }

    @Override
    public ModelEventsRecord value9(String value) {
        setTracingContext(value);
        return this;
    }

    @Override
    public ModelEventsRecord value10(Long value) {
        setIncrementalQueryId(value);
        return this;
    }

    @Override
    public ModelEventsRecord values(UUID value1, UUID value2, String value3, String value4, String value5, Instant value6, Instant value7, String value8, String value9, Long value10) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ModelEventsRecord
     */
    public ModelEventsRecord() {
        super(ModelEvents.MODEL_EVENTS);
    }

    /**
     * Create a detached, initialised ModelEventsRecord
     */
    public ModelEventsRecord(UUID id, UUID uowId, String modelId, String name, String modelName, Instant occurredAt, Instant insertedAt, String payload, String tracingContext, Long incrementalQueryId) {
        super(ModelEvents.MODEL_EVENTS);

        setId(id);
        setUowId(uowId);
        setModelId(modelId);
        setName(name);
        setModelName(modelName);
        setOccurredAt(occurredAt);
        setInsertedAt(insertedAt);
        setPayload(payload);
        setTracingContext(tracingContext);
        setIncrementalQueryId(incrementalQueryId);
    }
}
